{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","interval","setInterval","setState","console","log","toLocaleTimeString","clearInterval","props","name","React","Component","App","isVisible","clockName","oldName","randomNewName","Math","round","random","className","visibilityClock","type","onClick","clockNaming","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACGC,MAAQ,CACNC,KAAM,IAAIC,MAFf,uDAKG,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAXR,gCAcG,cAdH,kCAkBG,WACEC,cAAcP,KAAKC,YAnBxB,oBAsBG,WACE,OACE,oCACE,mCAEG,IACAD,KAAKQ,MAAMC,MAEd,2CAEG,IACAT,KAAKH,MAAMC,KAAKQ,2BAjC5B,GAA2BI,IAAMC,YCuDlBC,E,4MArDbf,MAAQ,CACNgB,WAAW,EACXC,UAAW,G,iDAGb,WACE,IAAMC,EAAUf,KAAKH,MAAMiB,UACrBE,EAAgBC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGtCf,QAAQC,IAAR,qCAA0CU,EAA1C,eAAwDC,IACxDhB,KAAKG,SAAS,CAAEW,UAAWE,M,6BAG7B,WACE,OAAIhB,KAAKH,MAAMgB,UACL,kBAAC,EAAD,CAAOJ,KAAMT,KAAKH,MAAMiB,YAG3B,uC,oBAGT,WAAU,IAAD,OACP,OACE,yBAAKM,UAAU,OACb,2CACCpB,KAAKqB,kBAEN,4BACEC,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEU,WAAW,MAF5C,cAMA,4BACES,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEU,WAAW,MAF5C,cAMA,2BACE,4BACES,KAAK,SACLC,QAAS,kBAAM,EAAKC,gBAFtB,kB,GA1CQd,IAAMC,WCAxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5bda1012.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n   state = {\n     date: new Date(),\n   }\n\n   componentDidMount() {\n     this.interval = setInterval(() => {\n       this.setState({ date: new Date() });\n\n       // eslint-disable-next-line no-console\n       console.log(this.state.date.toLocaleTimeString());\n     }, 1000);\n   }\n\n   componentDidUpdate() {\n\n   }\n\n   componentWillUnmount() {\n     clearInterval(this.interval);\n   }\n\n   render() {\n     return (\n       <>\n         <p>\n           Name:\n           {' '}\n           {this.props.name}\n         </p>\n         <p>\n           Current time:\n           {' '}\n           {this.state.date.toLocaleTimeString()}\n         </p>\n       </>\n     );\n   }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n    clockName: 1,\n  }\n\n  clockNaming() {\n    const oldName = this.state.clockName;\n    const randomNewName = Math.round(Math.random() * 100);\n\n    // eslint-disable-next-line no-console\n    console.log(`The Clock was renamed from ${oldName} to ${randomNewName}`);\n    this.setState({ clockName: randomNewName });\n  }\n\n  visibilityClock() {\n    if (this.state.isVisible) {\n      return (<Clock name={this.state.clockName} />);\n    }\n\n    return <></>;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.visibilityClock()}\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isVisible: true })}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isVisible: false })}\n        >\n          Hide Clock\n        </button>\n        <p>\n          <button\n            type=\"button\"\n            onClick={() => this.clockNaming()}\n          >\n            New name\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}